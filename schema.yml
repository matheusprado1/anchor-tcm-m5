openapi: 3.0.3
info:
  title: ANCHOR API
  version: 1.0.0
  description: Api for event management
paths:
  /api/addresses/:
    get:
      operationId: api_addresses_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAddressList'
          description: ''
    post:
      operationId: api_addresses_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Address'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Address'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Address'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
          description: ''
  /api/addresses/{address_id}/:
    get:
      operationId: api_addresses_retrieve
      parameters:
      - in: path
        name: address_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
          description: ''
    put:
      operationId: api_addresses_update
      parameters:
      - in: path
        name: address_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Address'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Address'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Address'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
          description: ''
    patch:
      operationId: api_addresses_partial_update
      parameters:
      - in: path
        name: address_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAddress'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAddress'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAddress'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
          description: ''
    delete:
      operationId: api_addresses_destroy
      parameters:
      - in: path
        name: address_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/batchs/:
    get:
      operationId: api_batchs_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBatchList'
          description: ''
    post:
      operationId: api_batchs_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Batch'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Batch'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Batch'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Batch'
          description: ''
  /api/batchs/{id}/:
    get:
      operationId: api_batchs_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchDetail'
          description: ''
    put:
      operationId: api_batchs_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchDetail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BatchDetail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BatchDetail'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchDetail'
          description: ''
    patch:
      operationId: api_batchs_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBatchDetail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBatchDetail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBatchDetail'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchDetail'
          description: ''
    delete:
      operationId: api_batchs_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/event/distance/:
    get:
      operationId: api_event_distance_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEventDistanceList'
          description: ''
  /api/event/distance_gte/{dist}/:
    get:
      operationId: api_event_distance_gte_list
      parameters:
      - in: path
        name: dist
        schema:
          type: integer
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEventDistanceList'
          description: ''
  /api/event/distance_lte/{dist}/:
    get:
      operationId: api_event_distance_lte_list
      parameters:
      - in: path
        name: dist
        schema:
          type: integer
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEventDistanceList'
          description: ''
  /api/events/:
    get:
      operationId: api_events_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEventList'
          description: ''
    post:
      operationId: api_events_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Event'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Event'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Event'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
          description: ''
  /api/events/{event_id}/:
    get:
      operationId: api_events_retrieve
      parameters:
      - in: path
        name: event_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventDetail'
          description: ''
    put:
      operationId: api_events_update
      parameters:
      - in: path
        name: event_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventDetail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EventDetail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EventDetail'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventDetail'
          description: ''
    patch:
      operationId: api_events_partial_update
      parameters:
      - in: path
        name: event_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEventDetail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEventDetail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEventDetail'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventDetail'
          description: ''
    delete:
      operationId: api_events_destroy
      parameters:
      - in: path
        name: event_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/image/{event_id}/:
    post:
      operationId: api_image_create
      parameters:
      - in: path
        name: event_id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this image.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Image'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Image'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Image'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Image'
          description: ''
  /api/image/{user_id}/:
    post:
      operationId: api_image_create_2
      parameters:
      - in: path
        name: user_id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this image.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Image'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Image'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Image'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Image'
          description: ''
  /api/images/:
    get:
      operationId: api_images_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedImageList'
          description: ''
  /api/images/{image_id}/:
    get:
      operationId: api_images_retrieve
      parameters:
      - in: path
        name: image_id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this image.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Image'
          description: ''
    put:
      operationId: api_images_update
      parameters:
      - in: path
        name: image_id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this image.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Image'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Image'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Image'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Image'
          description: ''
    patch:
      operationId: api_images_partial_update
      parameters:
      - in: path
        name: image_id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this image.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedImage'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedImage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedImage'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Image'
          description: ''
    delete:
      operationId: api_images_destroy
      parameters:
      - in: path
        name: image_id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this image.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/login/:
    post:
      operationId: api_login_create
      tags:
      - api
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/tickets/:
    get:
      operationId: api_tickets_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTicketList'
          description: ''
    post:
      operationId: api_tickets_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ticket'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Ticket'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Ticket'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ticket'
          description: ''
  /api/tickets/{ticket_id}/:
    delete:
      operationId: api_tickets_destroy
      parameters:
      - in: path
        name: ticket_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/tickets/user/{user_id}/:
    get:
      operationId: api_tickets_user_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: path
        name: user_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTicketList'
          description: ''
  /api/users/:
    get:
      operationId: api_users_list
      parameters:
      - in: query
        name: is_staff
        schema:
          type: boolean
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedListUserList'
          description: ''
    post:
      operationId: api_users_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/users/{user_id}/:
    get:
      operationId: api_users_retrieve
      parameters:
      - in: path
        name: user_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: api_users_update
      parameters:
      - in: path
        name: user_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: api_users_partial_update
      parameters:
      - in: path
        name: user_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: api_users_destroy
      parameters:
      - in: path
        name: user_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/zones/:
    get:
      operationId: api_zones_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedZoneList'
          description: ''
    post:
      operationId: api_zones_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Zone'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Zone'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Zone'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Zone'
          description: ''
  /api/zones/{zone_id}/:
    get:
      operationId: api_zones_retrieve
      parameters:
      - in: path
        name: zone_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Zone'
          description: ''
    put:
      operationId: api_zones_update
      parameters:
      - in: path
        name: zone_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Zone'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Zone'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Zone'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Zone'
          description: ''
    patch:
      operationId: api_zones_partial_update
      parameters:
      - in: path
        name: zone_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedZone'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedZone'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedZone'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Zone'
          description: ''
    delete:
      operationId: api_zones_destroy
      parameters:
      - in: path
        name: zone_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
components:
  schemas:
    Address:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        city:
          type: string
          maxLength: 50
        district:
          type: string
          maxLength: 100
        street:
          type: string
          maxLength: 255
        number:
          type: string
          maxLength: 30
        zipcode:
          type: string
          maxLength: 20
        latitude:
          type: string
          readOnly: true
          nullable: true
        longitude:
          type: string
          readOnly: true
          nullable: true
      required:
      - city
      - district
      - id
      - latitude
      - longitude
      - number
      - street
      - zipcode
    Batch:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        number_batch:
          type: integer
          readOnly: true
        price:
          type: number
          format: double
        quantity:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        due_date:
          type: string
          format: date
        is_active:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        zone:
          type: string
          format: uuid
      required:
      - created_at
      - due_date
      - id
      - number_batch
      - price
      - quantity
      - zone
    BatchDetail:
      type: object
      properties:
        id:
          type: string
          format: uuid
        number_batch:
          type: integer
          readOnly: true
        price:
          type: number
          format: double
        quantity:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        due_date:
          type: string
          format: date
        is_active:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        zone:
          type: string
          format: uuid
      required:
      - created_at
      - due_date
      - number_batch
      - price
      - quantity
      - zone
    Event:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 127
        description:
          type: string
        duration:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        date:
          type: string
          format: date-time
        classification:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        created_at:
          type: string
          format: date-time
          readOnly: true
        is_active:
          type: boolean
        address:
          $ref: '#/components/schemas/Address'
      required:
      - address
      - classification
      - created_at
      - date
      - description
      - duration
      - id
      - name
    EventDetail:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 127
        description:
          type: string
        duration:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        date:
          type: string
          format: date-time
        classification:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        created_at:
          type: string
          format: date-time
          readOnly: true
        is_active:
          type: boolean
        user:
          type: string
          format: uuid
          nullable: true
        address:
          type: string
          format: uuid
          nullable: true
      required:
      - classification
      - created_at
      - date
      - description
      - duration
      - id
      - name
    EventDistance:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        distance:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 127
        description:
          type: string
        duration:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        date:
          type: string
          format: date-time
        classification:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        created_at:
          type: string
          format: date-time
          readOnly: true
        is_active:
          type: boolean
        user:
          type: string
          format: uuid
          nullable: true
        address:
          type: string
          format: uuid
          nullable: true
      required:
      - classification
      - created_at
      - date
      - description
      - distance
      - duration
      - id
      - name
    Image:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        photo:
          type: string
      required:
      - id
      - photo
    ListUser:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        username:
          type: string
          maxLength: 20
        is_staff:
          type: boolean
        is_active:
          type: boolean
          title: Active
          description: Designates whether this user should be treated as active. Unselect
            this instead of deleting accounts.
        first_name:
          type: string
          maxLength: 50
        last_name:
          type: string
          maxLength: 50
        cpf:
          type: string
          maxLength: 11
        email:
          type: string
          format: email
          maxLength: 127
      required:
      - cpf
      - email
      - first_name
      - id
      - is_staff
      - last_name
      - username
    PaginatedAddressList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Address'
    PaginatedBatchList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Batch'
    PaginatedEventDistanceList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/EventDistance'
    PaginatedEventList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Event'
    PaginatedImageList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Image'
    PaginatedListUserList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ListUser'
    PaginatedTicketList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Ticket'
    PaginatedZoneList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Zone'
    PatchedAddress:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        city:
          type: string
          maxLength: 50
        district:
          type: string
          maxLength: 100
        street:
          type: string
          maxLength: 255
        number:
          type: string
          maxLength: 30
        zipcode:
          type: string
          maxLength: 20
        latitude:
          type: string
          readOnly: true
          nullable: true
        longitude:
          type: string
          readOnly: true
          nullable: true
    PatchedBatchDetail:
      type: object
      properties:
        id:
          type: string
          format: uuid
        number_batch:
          type: integer
          readOnly: true
        price:
          type: number
          format: double
        quantity:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        due_date:
          type: string
          format: date
        is_active:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        zone:
          type: string
          format: uuid
    PatchedEventDetail:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 127
        description:
          type: string
        duration:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        date:
          type: string
          format: date-time
        classification:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        created_at:
          type: string
          format: date-time
          readOnly: true
        is_active:
          type: boolean
        user:
          type: string
          format: uuid
          nullable: true
        address:
          type: string
          format: uuid
          nullable: true
    PatchedImage:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        photo:
          type: string
    PatchedUser:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        username:
          type: string
          maxLength: 20
        email:
          type: string
          format: email
          maxLength: 127
        cpf:
          type: string
          maxLength: 11
        birthdate:
          type: string
          format: date
        password:
          type: string
          writeOnly: true
          maxLength: 128
        first_name:
          type: string
          maxLength: 50
        last_name:
          type: string
          maxLength: 50
        is_staff:
          type: boolean
        is_active:
          type: boolean
          title: Active
          description: Designates whether this user should be treated as active. Unselect
            this instead of deleting accounts.
        is_superuser:
          type: boolean
          title: Superuser status
          description: Designates that this user has all permissions without explicitly
            assigning them.
        created_at:
          type: string
          format: date-time
          readOnly: true
        address:
          $ref: '#/components/schemas/Address'
        age:
          type: string
          readOnly: true
    PatchedZone:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        total_sold_tickets:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 50
        is_active:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        event:
          type: string
          format: uuid
    Ticket:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        user:
          type: string
          format: uuid
          readOnly: true
        batch:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - batch
      - created_at
      - id
      - user
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        username:
          type: string
          maxLength: 20
        email:
          type: string
          format: email
          maxLength: 127
        cpf:
          type: string
          maxLength: 11
        birthdate:
          type: string
          format: date
        password:
          type: string
          writeOnly: true
          maxLength: 128
        first_name:
          type: string
          maxLength: 50
        last_name:
          type: string
          maxLength: 50
        is_staff:
          type: boolean
        is_active:
          type: boolean
          title: Active
          description: Designates whether this user should be treated as active. Unselect
            this instead of deleting accounts.
        is_superuser:
          type: boolean
          title: Superuser status
          description: Designates that this user has all permissions without explicitly
            assigning them.
        created_at:
          type: string
          format: date-time
          readOnly: true
        address:
          $ref: '#/components/schemas/Address'
        age:
          type: string
          readOnly: true
      required:
      - address
      - age
      - birthdate
      - cpf
      - created_at
      - email
      - first_name
      - id
      - is_staff
      - last_name
      - password
      - username
    Zone:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        total_sold_tickets:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 50
        is_active:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        event:
          type: string
          format: uuid
      required:
      - created_at
      - event
      - id
      - name
      - total_sold_tickets
  securitySchemes:
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
